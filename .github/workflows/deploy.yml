name: Deployment

on:
  push:
    branches:
      - development
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  deploy-staging:
    name: Deploy to Staging
    if: github.ref == 'refs/heads/development' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Deploy to Staging Server
        run: |
          # Add staging server to known hosts
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.STAGING_SERVER }} >> ~/.ssh/known_hosts
          
          # Deploy using rsync
          rsync -avz --delete dist/ ${{ secrets.STAGING_USER }}@${{ secrets.STAGING_SERVER }}:${{ secrets.STAGING_PATH }}
          
          # Restart the application
          ssh ${{ secrets.STAGING_USER }}@${{ secrets.STAGING_SERVER }} 'cd ${{ secrets.STAGING_PATH }} && pm2 restart agronet-api || pm2 start dist/index.js --name agronet-api'
      
      - name: Notify Slack on Success
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: good
          SLACK_TITLE: Staging Deployment Successful
          SLACK_MESSAGE: 'AgroNET API has been successfully deployed to staging environment'

  deploy-production:
    name: Deploy to Production
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Deploy to Production Server
        run: |
          # Add production server to known hosts
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.PRODUCTION_SERVER }} >> ~/.ssh/known_hosts
          
          # Deploy using rsync
          rsync -avz --delete dist/ ${{ secrets.PRODUCTION_USER }}@${{ secrets.PRODUCTION_SERVER }}:${{ secrets.PRODUCTION_PATH }}
          
          # Restart the application
          ssh ${{ secrets.PRODUCTION_USER }}@${{ secrets.PRODUCTION_SERVER }} 'cd ${{ secrets.PRODUCTION_PATH }} && pm2 restart agronet-api || pm2 start dist/index.js --name agronet-api'
      
      - name: Create GitHub Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Notify Slack on Success
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: good
          SLACK_TITLE: Production Deployment Successful
          SLACK_MESSAGE: 'AgroNET API has been successfully deployed to production environment' 